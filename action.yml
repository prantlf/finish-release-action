name: 'Commit Version and Create Release'
description: 'GitHub action for committing and pushing changes related to versioning an for creating a new release with artefacts.'
author: prantlf

branding:
  icon: sunset
  color: yellow

inputs:
  branches:
    description: >-
      Branches which this action should run for, which are used to publishing releases. Use spaces for separating the branch names. If you want to use multiple lines in YAML, introduce them with ">-". If you want to allow all branches, set the value to "*".
    default: main master
  enable:
    description: >-
      Can be set to `false` to prevent this action from running. It's helpful in the pipeline, which will not continue releasing, but only building and testing, and that will be decided in the middle of a job execution.
    default: true
  no-bump:
    description: >-
      Set to `true` not to bump the version number in source files. Only the changelog will be modified.
    default: false
  no-commit:
    description: >-
      Set to `true` not to commit the changes. If you set `no-bump`, you'll likely want to set `no-commit` and `no-push` too.
    default: false
  no-tag:
    description: >-
      Set to `true` not to tag the commits. If you set `no-commit`, you don't have to set `no-tag`.
    default: false
  no-push:
    description: >-
      Set to `true` not to push the committed changes. If you set `no-bump`, you'll likely want to set `no-commit` and `no-push` too.
    default: false
  no-archives:
    description: >-
      Set to `true` not to upload platform archives automatically as release assets.
    default: false
  dry-run:
    description: >-
      Can be set to `true` to only print what would be done without actually doing it.
    default: false
  debug:
    description: >-
      Can be set to `true` to enable debug logging of the supporting tools. Debug logging will be enabled also if it's enabled on the runner.
    default: false

runs:
  using: 'composite'
  steps:
  - name: Setup parameters
    if: ${{ inputs.enable == 'true' }}
    id: setup
    env:
      FR_BRANCHES: ${{ inputs.branches }}
    shell: bash
    run: |
      if [[ "$FR_BRANCHES" == "*" || " $FR_BRANCHES " == *" $GITHUB_REF_NAME "* ]]; then
        echo "enable=true" >> $GITHUB_OUTPUT
      fi
  - name: Install newchanges
    if: ${{ steps.setup.outputs.enable == 'true' }}
    uses: prantlf/install-release-action@v1
    with:
      repo: prantlf/v-newchanges
  - name: Install vp
    if: ${{ steps.setup.outputs.enable == 'true' }}
    uses: prantlf/install-release-action@v1
    with:
      repo: prantlf/vp
  - name: Commit and push changes and create release
    if: ${{ steps.setup.outputs.enable == 'true' }}
    shell: bash
    env:
      FR_NO_BUMP: ${{ inputs.no-bump }}
      FR_NO_COMMIT: ${{ inputs.no-commit }}
      FR_NO_TAG: ${{ inputs.no-tag }}
      FR_NO_PUSH: ${{ inputs.no-push }}
      FR_NO_ARCHIVES: ${{ inputs.no-archives }}
      FR_DRY: ${{ inputs.dry-run }}
      FR_DEBUG: ${{ inputs.debug }}
    run: |
      git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      git config --global user.name "github-actions[bot]"
      VP_OPTIONS="-yv --commit --tag"
      if [[ "$FR_NO_BUMP" == "true" ]]; then
        echo "bumping version number disabled"
        VP_OPTIONS="$VP_OPTIONS --no-bump"
      fi
      if [[ "$FR_NO_COMMIT" == "true" ]]; then
        echo "committing changes disabled"
        VP_OPTIONS="$VP_OPTIONS --no-commit"
      fi
      if [[ "$FR_NO_TAG" == "true" ]]; then
        echo "tagging commits disabled"
        VP_OPTIONS="$VP_OPTIONS --no-tag"
      fi
      if [[ "$FR_NO_PUSH" == "true" ]]; then
        echo "pushing commits disabled"
        VP_OPTIONS="$VP_OPTIONS --no-push"
      fi
      if [[ "$FR_NO_ARCHIVES" == "true" ]]; then
        echo "archives disabled"
        VP_OPTIONS="$VP_OPTIONS --no-archives"
      fi
      if [[ "$FR_DRY" == "true" ]]; then
        echo "dry-run enabled"
        VP_OPTIONS="$VP_OPTIONS -d"
      fi
      echo "execute \"vp $VP_OPTIONS publish\""
      if [[ "$FR_DEBUG" == "true" || "$RUNNER_DEBUG" == "1" ]]; then
        DEBUG=* vp $VP_OPTIONS publish
      else
        vp $VP_OPTIONS publish
      fi
